#!/bin/bash

NOTE_DIR="$HOME/.note"
NOTE_FILE="$NOTE_DIR/-note"
SHELL_CONFIG="$HOME/.bashrc"
[ -f "$HOME/.zshrc" ] && SHELL_CONFIG="$HOME/.zshrc"

show_help() {
  echo "Usage:"
  echo "  note 'your note'       → Save a note"
  echo "  note -v                → View all notes"
  echo "  note -ln               → View notes with line numbers"
  echo "  note -ad               → Delete ALL notes"
  echo "  note -Nd (e.g., -10d)  → Delete line N"
  echo "  note -s 'keyword'      → Search notes (with line numbers)"
  echo "  note -un               → COMPLETELY uninstall note tool"
  echo "  note -h                → Show help"
  echo ""
  echo "Special cases:"
  echo "  For notes with ', \$, #, etc: note \$'your \'note\' with \#symbols'"
}

uninstall() {
  rm -rf "$NOTE_DIR" 2>/dev/null
  sed -i '/alias note=/d' "$HOME/.bashrc" 2>/dev/null
  sed -i '/alias note=/d' "$HOME/.zshrc" 2>/dev/null
  echo "✅ Note tool completely uninstalled."
  [[ -d ~/note/.git ]] && echo "ℹ️  Remove repo: rm -rf ~/note"
}

save_note() {
  mkdir -p "$NOTE_DIR"
  echo >> "NOTE_FILE"
  printf "%s: %s\n" "$(date +'%Y-%m-%d %H:%M:%S')" "$1" >> "$NOTE_FILE"
  echo "Note saved!"
}

case "$1" in
  ""|-h) show_help ;;
  -v)    [[ -s "$NOTE_FILE" ]] && cat "$NOTE_FILE" || echo "No notes yet!" ;;
  -ln)   [[ -s "$NOTE_FILE" ]] && nl -ba "$NOTE_FILE" || echo "No notes yet!" ;;
  -ad)   > "$NOTE_FILE" && echo "All notes deleted!" ;;
  -[0-9]*d)
    line_num="${1//[!0-9]/}"
    [[ -s "$NOTE_FILE" ]] && sed -i "${line_num}d" "$NOTE_FILE" && echo "Deleted line $line_num." || echo "No notes to delete!"
    ;;
  -s)
    [[ -z "$2" ]] && echo "Error: Search term required." || grep -ni "$2" "$NOTE_FILE" || echo "No matches found."
    ;;
  -un)   uninstall ;;
  *)
    # Handle multi-line notes and special chars
    if [[ "$*" == *$'\n'* ]]; then
      save_note "$(echo "$@" | sed ':a;N;$!ba;s/\n/\\n/g')"
    else
      save_note "$*"
    fi
    ;;
esac
