#!/bin/bash

NOTE_DIR="$HOME/.note"
NOTE_FILE="$NOTE_DIR/-note"
SHELL_CONFIG="$HOME/.bashrc"
[ -f "$HOME/.zshrc" ] && SHELL_CONFIG="$HOME/.zshrc"

show_help() {
  echo "Usage:"
  echo "  note 'your note'       → Save a note"
  echo "  note -v                → View all notes"
  echo "  note -ln               → View notes with line numbers"
  echo "  note -ad               → Delete ALL notes"
  echo "  note -Nd (e.g., -10d)  → Delete line N"
  echo "  note -s 'keyword'      → Search notes (with line numbers)"
  echo "  note -un               → COMPLETELY uninstall note tool"
  echo "  note -h                → Show help"
}

uninstall() {
  # 1. Remove all note files
  rm -rf "$NOTE_DIR" 2>/dev/null
  
  # 2. Remove alias from all shell configs
  sed -i '/alias note=/d' "$HOME/.bashrc" 2>/dev/null
  sed -i '/alias note=/d' "$HOME/.zshrc" 2>/dev/null
  
  # 3. Optional: Suggest Git repo removal
  if [ -d ~/note/.git ]; then
    echo "Note: To remove source files, run: rm -rf ~/note"
    echo "      (This preserves your customizations if cloned elsewhere)"
  fi
  
  echo "✅ Note tool completely uninstalled."
  echo "   Restart your terminal to clear any active aliases."
}

case "$1" in
  ""|-h) show_help ;;
  -v)    [[ -s "$NOTE_FILE" ]] && cat "$NOTE_FILE" || echo "No notes yet!" ;;
  -ln)   [[ -s "$NOTE_FILE" ]] && nl -ba "$NOTE_FILE" || echo "No notes yet!" ;;
  -ad)   > "$NOTE_FILE" && echo "All notes deleted!" ;;
  -[0-9]*d)
    line_num="${1//[!0-9]/}"
    [[ -s "$NOTE_FILE" ]] && sed -i "${line_num}d" "$NOTE_FILE" && echo "Deleted line $line_num." || echo "No notes to delete!"
    ;;
  -s)
    if [[ -z "$2" ]]; then
      echo "Error: Search term required."
    else
      echo "Search results (Line:Text):"
      grep -ni "$2" "$NOTE_FILE" || echo "No matches found."
    fi
    ;;
  -un)   uninstall ;;
  *)
    mkdir -p "$NOTE_DIR"
    echo "$(date +'%Y-%m-%d %H:%M:%S'): $1" >> "$NOTE_FILE"
    echo "Note saved!"
    ;;
esac
